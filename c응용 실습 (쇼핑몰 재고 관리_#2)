#include <stdio.h>
#include <stdlib.h> // 동적 메모리 할당을 위한 헤더

// 상품 정보를 저장할 구조체 정의
typedef struct {
    int stock;      // 입고 수량
    int sales;      // 판매 수량
    int remaining;  // 남은 재고
} Product;

int main() {
    int numProducts; // 상품 개수
    printf("상품 개수를 입력하세요: ");
    scanf_s("%d", &numProducts);

    // 동적 메모리 할당으로 상품 배열 생성
    Product* products = (Product*)malloc(numProducts * sizeof(Product));
    if (products == NULL) {
        printf("메모리 할당 실패\n");
        return 1; // 프로그램 종료
    }

    int totalStock = 0;  // 총 입고 수량
    int totalSales = 0;  // 총 판매량
    float totalSalesRate; // 총 판매율

    int maxSales = 0, maxSalesId = 0; // 최대 판매량
    int minSales = 2147483647, minSalesId = 0; // 최소 판매량 (초기값: 최댓값)

    // 상품별 데이터 입력
    for (int i = 0; i < numProducts; i++) {
        printf("상품 %d의 입고 수량을 입력하세요: ", i + 1);
        scanf_s("%d", &products[i].stock);

        printf("상품 %d의 판매 수량을 입력하세요: ", i + 1);
        scanf_s("%d", &products[i].sales);

        // 재고 계산
        products[i].remaining = products[i].stock - products[i].sales;

        // 전체 합산
        totalStock += products[i].stock;
        totalSales += products[i].sales;

        // 최대 판매량 확인
        if (products[i].sales > maxSales) {
            maxSales = products[i].sales;
            maxSalesId = i + 1;
        }

        // 최소 판매량 확인
        if (products[i].sales < minSales) {
            minSales = products[i].sales;
            minSalesId = i + 1;
        }
    }

    // 총 판매율 계산
    totalSalesRate = ((float)totalSales / totalStock) * 100;

    // 결과 출력
    printf("\n=== 결과 출력 ===\n");
    printf("재고수량: %d\n", totalStock - totalSales);
    printf("총 판매량: %d (판매율 %.2f%%)\n", totalSales, totalSalesRate);
    printf("가장 많이 판매된 상품: ID %d, 판매량 %d\n", maxSalesId, maxSales);
    printf("가장 적게 판매된 상품: ID %d, 판매량 %d\n", minSalesId, minSales);

    // 재고 부족 경고
    for (int i = 0; i < numProducts; i++) {
        if (products[i].remaining <= 2) {
            printf("상품 ID %d: 재고부족(%d)\n", i + 1, products[i].remaining);
        }
    }

    // 동적 메모리 해제
    free(products);

    return 0;
}
